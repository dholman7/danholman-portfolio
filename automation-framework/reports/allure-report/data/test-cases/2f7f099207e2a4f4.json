{"uid":"2f7f099207e2a4f4","name":"test_graphql_mutation_create_user","fullName":"tests.integration.test_api_examples.TestGraphQLAPI#test_graphql_mutation_create_user","historyId":"9ca802387cac5ad323134bba9b6386cd","time":{"start":1757453399649,"stop":1757453399650,"duration":1},"description":"Test GraphQL mutation for creating user.","descriptionHtml":"<p>Test GraphQL mutation for creating user.</p>\n","status":"failed","statusMessage":"AssertionError: assert 0 == 200\n +  where 0 = APIResponse(status_code=0, headers={}, data={'error': \"Invalid URL '/graphql': No scheme supplied. Perhaps you meant https:///graphql?\"}, response_time=8.392333984375e-05, url='/graphql', method='POST', request_data={'query': '\\n        mutation CreateUser($input: UserInput!) {\\n            createUser(input: $input) {\\n                id\\n                firstName\\n                lastName\\n                email\\n            }\\n        }\\n        ', 'variables': {'input': {'firstName': 'Lauren', 'lastName': 'Gonzalez', 'email': 'gravespatrick@example.net', 'phone': '294.918.1093x20014'}}, 'operationName': None}).status_code","statusTrace":"tests/integration/test_api_examples.py:328: in test_graphql_mutation_create_user\n    assert response.status_code == 200\nE   assert 0 == 200\nE    +  where 0 = APIResponse(status_code=0, headers={}, data={'error': \"Invalid URL '/graphql': No scheme supplied. Perhaps you meant https:///graphql?\"}, response_time=8.392333984375e-05, url='/graphql', method='POST', request_data={'query': '\\n        mutation CreateUser($input: UserInput!) {\\n            createUser(input: $input) {\\n                id\\n                firstName\\n                lastName\\n                email\\n            }\\n        }\\n        ', 'variables': {'input': {'firstName': 'Lauren', 'lastName': 'Gonzalez', 'email': 'gravespatrick@example.net', 'phone': '294.918.1093x20014'}}, 'operationName': None}).status_code","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757453399108,"stop":1757453399109,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1757453399109,"stop":1757453399109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cleanup_test_environment","time":{"start":1757453399109,"stop":1757453399109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test_environment","time":{"start":1757453399109,"stop":1757453399110,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1757453399109,"stop":1757453399109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tmpdir_factory","time":{"start":1757453399110,"stop":1757453399110,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session_tmpdir","time":{"start":1757453399110,"stop":1757453399111,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_session_scoped_browser","time":{"start":1757453399111,"stop":1757453399111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_dir","time":{"start":1757453399111,"stop":1757453399111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_encoding","time":{"start":1757453399111,"stop":1757453399112,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_make_screenshot_on_failure","time":{"start":1757453399111,"stop":1757453399111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_getter_html","time":{"start":1757453399112,"stop":1757453399112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_getter_png","time":{"start":1757453399112,"stop":1757453399112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_browser_screenshot_session","time":{"start":1757453399648,"stop":1757453399648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup_teardown","time":{"start":1757453399648,"stop":1757453399648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"random_user","time":{"start":1757453399648,"stop":1757453399649,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"graphql_client","time":{"start":1757453399648,"stop":1757453399648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_logger","time":{"start":1757453399648,"stop":1757453399648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Test GraphQL mutation for creating user.","status":"failed","statusMessage":"AssertionError: assert 0 == 200\n +  where 0 = APIResponse(status_code=0, headers={}, data={'error': \"Invalid URL '/graphql': No scheme supplied. Perhaps you meant https:///graphql?\"}, response_time=8.392333984375e-05, url='/graphql', method='POST', request_data={'query': '\\n        mutation CreateUser($input: UserInput!) {\\n            createUser(input: $input) {\\n                id\\n                firstName\\n                lastName\\n                email\\n            }\\n        }\\n        ', 'variables': {'input': {'firstName': 'Lauren', 'lastName': 'Gonzalez', 'email': 'gravespatrick@example.net', 'phone': '294.918.1093x20014'}}, 'operationName': None}).status_code","statusTrace":"tests/integration/test_api_examples.py:328: in test_graphql_mutation_create_user\n    assert response.status_code == 200\nE   assert 0 == 200\nE    +  where 0 = APIResponse(status_code=0, headers={}, data={'error': \"Invalid URL '/graphql': No scheme supplied. Perhaps you meant https:///graphql?\"}, response_time=8.392333984375e-05, url='/graphql', method='POST', request_data={'query': '\\n        mutation CreateUser($input: UserInput!) {\\n            createUser(input: $input) {\\n                id\\n                firstName\\n                lastName\\n                email\\n            }\\n        }\\n        ', 'variables': {'input': {'firstName': 'Lauren', 'lastName': 'Gonzalez', 'email': 'gravespatrick@example.net', 'phone': '294.918.1093x20014'}}, 'operationName': None}).status_code","steps":[],"attachments":[{"uid":"61c07faab70394d8","name":"log","source":"61c07faab70394d8.txt","type":"text/plain","size":162}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_setup_teardown::0","time":{"start":1757453399655,"stop":1757453399655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"graphql_client::0","time":{"start":1757453399655,"stop":1757453399655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_browser_screenshot_session::0","time":{"start":1757453399656,"stop":1757453399656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cleanup_test_environment::0","time":{"start":1757453400246,"stop":1757453400246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"api"},{"name":"tag","value":"docker_integration"},{"name":"tag","value":"integration"},{"name":"parentSuite","value":"tests.integration"},{"name":"suite","value":"test_api_examples"},{"name":"subSuite","value":"TestGraphQLAPI"},{"name":"host","value":"EvilBookPro.local"},{"name":"thread","value":"48238-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.test_api_examples"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["docker_integration","regression","integration","api"]},"source":"2f7f099207e2a4f4.json","parameterValues":[]}