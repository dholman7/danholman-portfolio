{"uid":"7b47dd9d6dddbec1","name":"Test base page functionality","fullName":"tests.test_regression.TestAutomationFrameworkRegression#test_base_page_functionality","historyId":"6a60a14f3ff373980084cb61d40cfb0e","time":{"start":1757433931318,"stop":1757433931318,"duration":0},"description":"Verify base page class provides expected functionality.","descriptionHtml":"<p>Verify base page class provides expected functionality.</p>\n","status":"failed","statusMessage":"AssertionError: assert False\n +  where False = hasattr(<src.core.base_page.BasePage object at 0x103e254d0>, 'wait_for_element')","statusTrace":"self = <tests.test_regression.TestAutomationFrameworkRegression object at 0x103f4cc50>\n\n    @allure.story(\"Base Page\")\n    @allure.title(\"Test base page functionality\")\n    @allure.description(\"Verify base page class provides expected functionality.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.tag(\"page\", \"base\", \"regression\")\n    def test_base_page_functionality(self):\n        \"\"\"Test base page functionality.\"\"\"\n        with allure.step(\"Initialize base page with mock driver\"):\n            # Mock driver for testing\n            mock_driver = MagicMock()\n            page = BasePage(mock_driver)\n            assert page is not None\n    \n        with allure.step(\"Test base page methods\"):\n>           assert hasattr(page, 'wait_for_element')\nE           AssertionError: assert False\nE            +  where False = hasattr(<src.core.base_page.BasePage object at 0x103e254d0>, 'wait_for_element')\n\ntests/test_regression.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757433931311,"stop":1757433931312,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tmpdir_factory","time":{"start":1757433931312,"stop":1757433931312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1757433931312,"stop":1757433931312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cleanup_test_environment","time":{"start":1757433931312,"stop":1757433931312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1757433931312,"stop":1757433931312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session_tmpdir","time":{"start":1757433931312,"stop":1757433931313,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test_environment","time":{"start":1757433931312,"stop":1757433931312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_getter_png","time":{"start":1757433931313,"stop":1757433931313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_make_screenshot_on_failure","time":{"start":1757433931313,"stop":1757433931313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_getter_html","time":{"start":1757433931313,"stop":1757433931313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_session_scoped_browser","time":{"start":1757433931313,"stop":1757433931313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_dir","time":{"start":1757433931313,"stop":1757433931313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"splinter_screenshot_encoding","time":{"start":1757433931313,"stop":1757433931313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_browser_screenshot_session","time":{"start":1757433931317,"stop":1757433931318,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_logger","time":{"start":1757433931318,"stop":1757433931318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup_teardown","time":{"start":1757433931318,"stop":1757433931318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify base page class provides expected functionality.","status":"failed","statusMessage":"AssertionError: assert False\n +  where False = hasattr(<src.core.base_page.BasePage object at 0x103e254d0>, 'wait_for_element')","statusTrace":"self = <tests.test_regression.TestAutomationFrameworkRegression object at 0x103f4cc50>\n\n    @allure.story(\"Base Page\")\n    @allure.title(\"Test base page functionality\")\n    @allure.description(\"Verify base page class provides expected functionality.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.tag(\"page\", \"base\", \"regression\")\n    def test_base_page_functionality(self):\n        \"\"\"Test base page functionality.\"\"\"\n        with allure.step(\"Initialize base page with mock driver\"):\n            # Mock driver for testing\n            mock_driver = MagicMock()\n            page = BasePage(mock_driver)\n            assert page is not None\n    \n        with allure.step(\"Test base page methods\"):\n>           assert hasattr(page, 'wait_for_element')\nE           AssertionError: assert False\nE            +  where False = hasattr(<src.core.base_page.BasePage object at 0x103e254d0>, 'wait_for_element')\n\ntests/test_regression.py:89: AssertionError","steps":[{"name":"Initialize base page with mock driver","time":{"start":1757433931318,"stop":1757433931318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Test base page methods","time":{"start":1757433931318,"stop":1757433931318,"duration":0},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = hasattr(<src.core.base_page.BasePage object at 0x103e254d0>, 'wait_for_element')\n","statusTrace":"  File \"/Users/dannyevil/Documents/GitHub/danholman-portfolio/automation-framework/tests/test_regression.py\", line 89, in test_base_page_functionality\n    assert hasattr(page, 'wait_for_element')\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_browser_screenshot_session::0","time":{"start":1757433931346,"stop":1757433931346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_setup_teardown::0","time":{"start":1757433931346,"stop":1757433931346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cleanup_test_environment::0","time":{"start":1757433931444,"stop":1757433931444,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"page"},{"name":"feature","value":"Regression Testing"},{"name":"tag","value":"regression"},{"name":"epic","value":"Automation Framework"},{"name":"severity","value":"normal"},{"name":"tag","value":"base"},{"name":"story","value":"Base Page"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_regression"},{"name":"subSuite","value":"TestAutomationFrameworkRegression"},{"name":"host","value":"EvilBookPro.local"},{"name":"thread","value":"28769-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_regression"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["regression","page","base"]},"source":"7b47dd9d6dddbec1.json","parameterValues":[]}