name: Deploy Allure Reports to GitHub Pages

on:
  workflow_run:
    workflows: ["Portfolio Test Suite", "React Playwright Demo"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      module:
        type: choice
        options:
          - automation-framework
          - ai-rulesets
          - cloud-native-app
          - react-playwright-demo
          - all
        required: true
        default: all
        description: Module to deploy Allure report for

jobs:
  deploy-allure-reports:
    name: Deploy Allure Reports to GitHub Pages
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != null || github.event_name == 'workflow_dispatch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Debug workflow run info
        run: |
          echo "Workflow run event: ${{ github.event_name }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Workflow run name: ${{ github.event.workflow_run.name }}"
          echo "Workflow run status: ${{ github.event.workflow_run.status }}"
          
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure Reports
        uses: actions/download-artifact@v4
        with:
          pattern: "*-allure-report"
          path: allure-reports/
          merge-multiple: true
          
      - name: Download Playwright Reports
        uses: actions/download-artifact@v4
        with:
          pattern: "*-playwright-report"
          path: playwright-reports/
          merge-multiple: true
          
      - name: Download Coverage Reports
        uses: actions/download-artifact@v4
        with:
          pattern: "*-coverage-report"
          path: coverage-reports/
          merge-multiple: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Python for report combination
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Prepare Allure Reports for Deployment
        run: |
          # Create deployment directory
          mkdir -p gh-pages-deploy
          
          # Copy the main landing page
          if [ -f "docs/index.html" ]; then
            echo "Copying main landing page..."
            cp docs/index.html gh-pages-deploy/index.html
          else
            echo "Creating basic landing page..."
            cat > gh-pages-deploy/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test Results Dashboard</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
                  .container { max-width: 800px; margin: 0 auto; text-align: center; }
                  .module { margin: 20px 0; padding: 20px; background: white; color: #333; border-radius: 10px; }
                  .module h2 { color: #2c3e50; }
                  .module a { color: #007bff; text-decoration: none; padding: 10px 20px; background: #007bff; color: white; border-radius: 5px; display: inline-block; margin: 5px; }
                  .module a:hover { background: #0056b3; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üß™ Test Results Dashboard</h1>
                  <p>Comprehensive test automation portfolio showcasing 10+ years of SDET expertise</p>
                  
                  <div class="module">
                      <h2>üìä Combined Test Results</h2>
                      <p>Unified Allure reports from all modules</p>
                      <a href="combined-allure/">View Combined Allure Report</a>
                  </div>
                  
                  <div class="module">
                      <h2>ü§ñ Automation Framework</h2>
                      <p>Python/TypeScript test automation framework</p>
                      <a href="automation-framework/">View Report</a>
                  </div>
                  
                  <div class="module">
                      <h2>‚öõÔ∏è React Playwright Demo</h2>
                      <p>Modern React/TypeScript frontend with E2E testing</p>
                      <a href="react-playwright-demo/">View Allure Report</a>
                      <a href="react-playwright-demo/playwright/">View Playwright Report</a>
                  </div>
                  
                  <p><small>Reports are automatically updated on every successful build of the main branch.</small></p>
              </div>
          </body>
          </html>
          EOF
          fi
          
          # Copy individual module reports
          if [ -d "allure-reports/automation-framework-allure-report" ]; then
            echo "Copying automation-framework report..."
            cp -r allure-reports/automation-framework-allure-report gh-pages-deploy/automation-framework
          else
            echo "Creating placeholder for automation-framework..."
            mkdir -p gh-pages-deploy/automation-framework
            echo "<!DOCTYPE html><html><head><title>Allure Reports - Automation Framework</title></head><body><h1>Allure Test Reports - Automation Framework</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/automation-framework/index.html
          fi
          
          if [ -d "allure-reports/ai-rulesets-allure-report" ]; then
            echo "Copying ai-rulesets report..."
            cp -r allure-reports/ai-rulesets-allure-report gh-pages-deploy/ai-rulesets
          else
            echo "Creating placeholder for ai-rulesets..."
            mkdir -p gh-pages-deploy/ai-rulesets
            echo "<!DOCTYPE html><html><head><title>Allure Reports - AI Rulesets</title></head><body><h1>Allure Test Reports - AI Rulesets</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/ai-rulesets/index.html
          fi
          
          if [ -d "allure-reports/cloud-native-app-allure-report" ]; then
            echo "Copying cloud-native-app report..."
            cp -r allure-reports/cloud-native-app-allure-report gh-pages-deploy/cloud-native-app
          else
            echo "Creating placeholder for cloud-native-app..."
            mkdir -p gh-pages-deploy/cloud-native-app
            echo "<!DOCTYPE html><html><head><title>Allure Reports - Cloud Native App</title></head><body><h1>Allure Test Reports - Cloud Native App</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/cloud-native-app/index.html
          fi
          
          if [ -d "allure-reports/react-playwright-demo-allure-report" ]; then
            echo "Copying react-playwright-demo report..."
            cp -r allure-reports/react-playwright-demo-allure-report gh-pages-deploy/react-playwright-demo
          else
            echo "Creating placeholder for react-playwright-demo..."
            mkdir -p gh-pages-deploy/react-playwright-demo
            echo "<!DOCTYPE html><html><head><title>Allure Reports - React Playwright Demo</title></head><body><h1>Allure Test Reports - React Playwright Demo</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/react-playwright-demo/index.html
          fi
          
          # Copy Playwright reports
          if [ -d "playwright-reports" ]; then
            echo "Copying Playwright reports..."
            cp -r playwright-reports gh-pages-deploy/playwright-reports
            # Also copy to react-playwright-demo/playwright for direct access
            mkdir -p gh-pages-deploy/react-playwright-demo/playwright
            cp -r playwright-reports/* gh-pages-deploy/react-playwright-demo/playwright/ 2>/dev/null || true
          else
            echo "Creating placeholder for Playwright reports..."
            mkdir -p gh-pages-deploy/playwright-reports
            mkdir -p gh-pages-deploy/react-playwright-demo/playwright
            echo "<!DOCTYPE html><html><head><title>Playwright Reports</title></head><body><h1>Playwright Test Reports</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/playwright-reports/index.html
            echo "<!DOCTYPE html><html><head><title>Playwright Reports</title></head><body><h1>Playwright Test Reports</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/react-playwright-demo/playwright/index.html
          fi
          
          # Copy Coverage reports
          if [ -d "coverage-reports" ]; then
            echo "Copying Coverage reports..."
            cp -r coverage-reports gh-pages-deploy/coverage-reports
            # Also copy individual module coverage reports
            for module in automation-framework ai-rulesets cloud-native-app react-playwright-demo; do
              if [ -d "coverage-reports/${module}-coverage-report" ]; then
                mkdir -p gh-pages-deploy/${module}/coverage
                cp -r coverage-reports/${module}-coverage-report/* gh-pages-deploy/${module}/coverage/ 2>/dev/null || true
              fi
            done
          else
            echo "Creating placeholder for Coverage reports..."
            mkdir -p gh-pages-deploy/coverage-reports
            echo "<!DOCTYPE html><html><head><title>Coverage Reports</title></head><body><h1>Code Coverage Reports</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/coverage-reports/index.html
          fi
          
          # Create combined Allure report
          echo "Creating combined Allure report..."
          mkdir -p gh-pages-deploy/combined-allure
          
          # Collect all Allure results directories
          ALLURE_RESULTS_DIRS=""
          for module in automation-framework ai-rulesets cloud-native-app react-playwright-demo; do
            if [ -d "allure-reports/${module}-allure-report" ]; then
              # Extract results from the report directory
              RESULTS_DIR="allure-reports/${module}-allure-report"
              if [ -d "${RESULTS_DIR}/data/test-cases" ]; then
                ALLURE_RESULTS_DIRS="${ALLURE_RESULTS_DIRS} ${RESULTS_DIR}/data/test-cases"
              fi
            fi
          done
          
          # If we have Allure results, combine them
          if [ -n "$ALLURE_RESULTS_DIRS" ]; then
            echo "Combining Allure results from: $ALLURE_RESULTS_DIRS"
            python3 scripts/combine-allure-reports.py --sources $ALLURE_RESULTS_DIRS --output gh-pages-deploy/combined-allure-results --summary gh-pages-deploy/combined-summary.json
            
            # Generate combined Allure report if Allure is available
            if command -v allure >/dev/null 2>&1; then
              allure generate gh-pages-deploy/combined-allure-results --clean -o gh-pages-deploy/combined-allure
              echo "Combined Allure report generated"
            else
              echo "Allure not available, creating placeholder for combined report"
              echo "<!DOCTYPE html><html><head><title>Combined Allure Report</title></head><body><h1>Combined Allure Test Report</h1><p>Combined test results from all modules. Allure commandline required to generate full report.</p><p>Run: allure generate combined-allure-results --clean -o combined-allure</p></body></html>" > gh-pages-deploy/combined-allure/index.html
            fi
          else
            echo "No Allure results found, creating placeholder"
            echo "<!DOCTYPE html><html><head><title>Combined Allure Report</title></head><body><h1>Combined Allure Test Report</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/combined-allure/index.html
          fi
          
          # Create combined coverage report placeholder
          echo "Creating combined coverage report..."
          mkdir -p gh-pages-deploy/combined-coverage
          echo "<!DOCTYPE html><html><head><title>Combined Coverage Report</title></head><body><h1>Combined Code Coverage Report</h1><p>Combined coverage analysis from all modules will be available after test execution.</p></body></html>" > gh-pages-deploy/combined-coverage/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages-deploy

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
