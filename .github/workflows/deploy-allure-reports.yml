name: Process Allure Reports

on:
  workflow_call:
    inputs:
      module:
        type: string
        required: true
        default: all
        description: Module to process Allure report for
  workflow_dispatch:
    inputs:
      module:
        type: choice
        options:
          - automation-framework
          - ai-rulesets
          - cloud-native-app
          - react-playwright-demo
          - all
        required: true
        default: all
        description: Module to process Allure report for

jobs:
  process-allure-reports:
    name: Process Allure Reports
    runs-on: ubuntu-latest
    if: always()
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          
      - name: Authenticate with GitHub
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token


      - name: Download Allure Reports
        uses: actions/download-artifact@v4
        with:
          pattern: "*-allure-report"
          path: allure-reports/
          merge-multiple: false
        continue-on-error: true
          
      - name: Debug Downloaded Allure Artifacts
        run: |
          echo "=== Allure Reports Debug ==="
          if [ -d "allure-reports" ]; then
            echo "Allure reports directory exists"
            ls -la allure-reports/
            echo "Subdirectories:"
            find allure-reports/ -type d -maxdepth 2
            echo "Files:"
            find allure-reports/ -type f | head -20
          else
            echo "No allure-reports directory found"
          fi
          
          echo "=== Available Artifacts Debug ==="
          echo "Checking for specific artifact patterns..."
          for pattern in "automation-framework-allure-report" "ai-rulesets-allure-report" "cloud-native-app-allure-report" "react-playwright-demo-allure-report"; do
            echo "Looking for pattern: $pattern"
            if [ -d "allure-reports/$pattern" ]; then
              echo "Found: $pattern"
              ls -la "allure-reports/$pattern/"
            else
              echo "Not found: $pattern"
            fi
          done
          
      - name: Setup Python for Allure processing
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Setup Node.js for Allure
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'

      - name: Process Allure Reports
        run: |
          echo "=== Processing Allure Reports ==="
          
          # Create processed reports directory
          mkdir -p processed-allure-reports
          
          # Process each module's Allure report
          for module in automation-framework ai-rulesets cloud-native-app react-playwright-demo; do
            echo "Processing $module Allure report..."
            
            if [ -d "allure-reports/${module}-allure-report" ]; then
              echo "Found ${module} Allure report"
              
              # Handle different artifact structures
              if [ -d "allure-reports/${module}-allure-report/${module}/reports/allure-report" ]; then
                echo "Using nested structure: ${module}/reports/allure-report"
                mkdir -p "processed-allure-reports/${module}"
                cp -r "allure-reports/${module}-allure-report/${module}/reports/allure-report" "processed-allure-reports/${module}"
              elif [ -d "allure-reports/${module}-allure-report/reports/allure-report" ]; then
                echo "Using reports structure: reports/allure-report"
                mkdir -p "processed-allure-reports/${module}"
                cp -r "allure-reports/${module}-allure-report/reports/allure-report" "processed-allure-reports/${module}"
              else
                echo "Using direct structure: artifact contents"
                # Create the target directory first
                mkdir -p "processed-allure-reports/${module}"
                # Copy all files from the artifact
                find "allure-reports/${module}-allure-report" -name "*.html" -exec cp {} "processed-allure-reports/${module}/" \;
                find "allure-reports/${module}-allure-report" -name "*.css" -exec cp {} "processed-allure-reports/${module}/" \;
                find "allure-reports/${module}-allure-report" -name "*.js" -exec cp {} "processed-allure-reports/${module}/" \;
                find "allure-reports/${module}-allure-report" -name "data" -type d -exec cp -r {} "processed-allure-reports/${module}/" \;
                find "allure-reports/${module}-allure-report" -name "widgets" -type d -exec cp -r {} "processed-allure-reports/${module}/" \;
              fi
              
              echo "Processed ${module} report successfully"
              ls -la "processed-allure-reports/${module}/"
            else
              echo "No Allure report found for ${module}"
            fi
          done
          
          # Also check if there are any merged reports in the root allure-reports directory
          if [ -d "allure-reports" ] && [ "$(ls -A allure-reports)" ] && [ ! -d "allure-reports/automation-framework-allure-report" ]; then
            echo "Found merged Allure reports in root directory - processing them as automation-framework"
            mkdir -p "processed-allure-reports/automation-framework"
            cp -r allure-reports/* "processed-allure-reports/automation-framework/"
            echo "Processed merged reports as automation-framework"
            ls -la "processed-allure-reports/automation-framework/"
          fi
          
          echo "=== Final Processed Reports ==="
          ls -la processed-allure-reports/
          
          # Create combined Allure report using simple-elf/allure-report-action approach
          echo "=== Creating Combined Allure Report ==="
          
          # Download all Allure results artifacts for combining
          echo "Downloading Allure results for combining..."
          mkdir -p combined-allure-results
          
          # Download all Allure results artifacts
          for module in automation-framework ai-rulesets cloud-native-app react-playwright-demo; do
            echo "Downloading ${module} Allure results..."
            gh api repos/dholman7/danholman-portfolio/actions/artifacts --jq '.artifacts[] | select(.name == "'${module}'-allure-results") | .id' | head -1 | xargs -I {} gh api repos/dholman7/danholman-portfolio/actions/artifacts/{}/zip -o "${module}-allure-results.zip" || echo "No results found for ${module}"
            
            if [ -f "${module}-allure-results.zip" ]; then
              echo "Extracting ${module} Allure results..."
              unzip -q "${module}-allure-results.zip" -d "temp-${module}" || true
              rm "${module}-allure-results.zip" || true
              
              # Find and copy the actual allure-results directory
              if [ -d "temp-${module}/reports/allure-results" ]; then
                echo "Found allure-results in temp-${module}/reports/allure-results"
                find "temp-${module}/reports/allure-results" -name "*-result.json" -exec cp {} combined-allure-results/ \;
                find "temp-${module}/reports/allure-results" -name "*-container.json" -exec cp {} combined-allure-results/ \;
                find "temp-${module}/reports/allure-results" -name "*-attachment.*" -exec cp {} combined-allure-results/ \;
              elif [ -d "temp-${module}/allure-results" ]; then
                echo "Found allure-results in temp-${module}/allure-results"
                find "temp-${module}/allure-results" -name "*-result.json" -exec cp {} combined-allure-results/ \;
                find "temp-${module}/allure-results" -name "*-container.json" -exec cp {} combined-allure-results/ \;
                find "temp-${module}/allure-results" -name "*-attachment.*" -exec cp {} combined-allure-results/ \;
              fi
              
              # Clean up temp directory
              rm -rf "temp-${module}"
            fi
          done
          
          # List combined results
          echo "Combined Allure results contents:"
          ls -la combined-allure-results/ || echo "No combined results found"

      - name: Upload combined allure results
        uses: actions/upload-artifact@v4
        with:
          name: combined-allure-results
          path: combined-allure-results
          retention-days: 30
          
      - name: Generate combined Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: combined-allure-results
          gh_pages: gh-pages
          allure_report: combined-allure
          allure_history: combined-allure-history
          keep_reports: 7

      - name: Deploy Processed Allure Reports to Static Location
        run: |
          echo "=== Deploying Processed Allure Reports ==="
          
          # Create static reports directory
          mkdir -p static-reports/allure-reports
          
          # Copy processed reports to static location
          if [ -d "processed-allure-reports" ] && [ "$(ls -A processed-allure-reports)" ]; then
            echo "Copying processed reports to static location..."
            cp -r processed-allure-reports/* static-reports/allure-reports/
            
            # Also copy combined report if it exists
            if [ -d "combined-allure" ]; then
              echo "Copying combined Allure report to static location..."
              cp -r combined-allure static-reports/allure-reports/
            fi
            
            # Create index file for easy access
            cat > static-reports/allure-reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Allure Reports - Static Location</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .module { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
                  .module a { color: #0066cc; text-decoration: none; }
                  .module a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <h1>Allure Reports - Static Location</h1>
              <p>This directory contains processed Allure reports from all modules.</p>
              <div class="module">
                  <h2>Available Reports:</h2>
                  <ul>
                      <li><a href="combined-allure/">Combined Allure Report</a></li>
                      <li><a href="automation-framework/">Automation Framework</a></li>
                      <li><a href="ai-rulesets/">AI Rulesets</a></li>
                      <li><a href="cloud-native-app/">Cloud Native App</a></li>
                      <li><a href="react-playwright-demo/">React Playwright Demo</a></li>
                  </ul>
              </div>
          </body>
          </html>
          EOF
            
            echo "Static reports deployed successfully"
            ls -la static-reports/allure-reports/
          else
            echo "No processed reports found - creating placeholder"
            # Create a placeholder index file
            cat > static-reports/allure-reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Allure Reports - No Reports Available</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .warning { margin: 20px 0; padding: 15px; border: 1px solid #ffcc00; border-radius: 5px; background-color: #fff9e6; }
              </style>
          </head>
          <body>
              <h1>Allure Reports - No Reports Available</h1>
              <div class="warning">
                  <h2>⚠️ No Allure Reports Found</h2>
                  <p>No Allure reports were generated in the current workflow run. This could be due to:</p>
                  <ul>
                      <li>Test failures preventing report generation</li>
                      <li>Allure report generation issues</li>
                      <li>Artifact upload/download problems</li>
                  </ul>
                  <p>Please check the individual module jobs for more details.</p>
              </div>
          </body>
          </html>
          EOF
          fi

      - name: Upload Static Allure Reports
        uses: actions/upload-artifact@v4
        with:
          name: static-allure-reports
          path: static-reports/
          retention-days: 30
