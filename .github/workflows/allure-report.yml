name: Allure Report Generation

on:
  workflow_run:
    workflows: ["ci"]
    types: [completed]
  workflow_dispatch:
    inputs:
      module:
        type: choice
        options:
          - automation-framework
          - ai-test-generation
          - cloud-native-app
          - all
        required: true
        default: all
        description: Module to generate Allure report for
  push:
    branches: [ main ]
    paths:
      - 'automation-framework/**'
      - 'cloud-native-app/**'
      - 'ai-test-generation/**'
      - '.github/workflows/allure-report.yml'

jobs:
  generate-allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    if: (github.event.workflow_run.conclusion == 'success') || (github.event_name == 'workflow_dispatch') || (github.event_name == 'push')
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Allure Commandline
        run: |
          npm install -g allure-commandline

      - name: Download Allure Results - Automation Framework
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'automation-framework' || github.event_name == 'workflow_run' || github.event_name == 'push')
        uses: actions/download-artifact@v4
        with:
          name: automation-framework-allure-results
          path: automation-framework/reports/allure-results
        continue-on-error: true

      - name: Download Allure Results - AI Test Generation
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'ai-test-generation' || github.event_name == 'workflow_run' || github.event_name == 'push')
        uses: actions/download-artifact@v4
        with:
          name: ai-test-generation-allure-results
          path: ai-test-generation/reports/allure-results
        continue-on-error: true

      - name: Download Allure Results - Cloud Native App
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'cloud-native-app' || github.event_name == 'workflow_run' || github.event_name == 'push')
        uses: actions/download-artifact@v4
        with:
          name: cloud-native-app-allure-results
          path: cloud-native-app/reports/allure-results
        continue-on-error: true

      - name: Create Missing Directories
        run: |
          # Create directories for modules that might not have artifacts
          mkdir -p automation-framework/reports/allure-results
          mkdir -p ai-test-generation/reports/allure-results
          mkdir -p cloud-native-app/reports/allure-results

      - name: Check Artifact Availability
        run: |
          echo "Checking for available artifacts..."
          echo "Automation Framework: $(ls -la automation-framework/reports/allure-results/ 2>/dev/null | wc -l) files"
          echo "AI Test Generation: $(ls -la ai-test-generation/reports/allure-results/ 2>/dev/null | wc -l) files"
          echo "Cloud Native App: $(ls -la cloud-native-app/reports/allure-results/ 2>/dev/null | wc -l) files"

      - name: Generate Allure Report - Automation Framework
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'automation-framework' || github.event_name == 'workflow_run' || github.event_name == 'push')
        working-directory: automation-framework
        run: |
          if [ -d "reports/allure-results" ] && [ "$(ls -A reports/allure-results)" ]; then
            echo "Generating Allure report for automation-framework..."
            allure generate reports/allure-results --clean -o reports/allure-report
            echo "Allure report generated successfully"
          else
            echo "No Allure results found for automation-framework"
          fi

      - name: Generate Allure Report - AI Test Generation
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'ai-test-generation' || github.event_name == 'workflow_run' || github.event_name == 'push')
        working-directory: ai-test-generation
        run: |
          if [ -d "reports/allure-results" ] && [ "$(ls -A reports/allure-results)" ]; then
            echo "Generating Allure report for ai-test-generation..."
            allure generate reports/allure-results --clean -o reports/allure-report
            echo "Allure report generated successfully"
          else
            echo "No Allure results found for ai-test-generation"
          fi

      - name: Generate Allure Report - Cloud Native App
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'cloud-native-app' || github.event_name == 'workflow_run' || github.event_name == 'push')
        working-directory: cloud-native-app
        run: |
          if [ -d "reports/allure-results" ] && [ "$(ls -A reports/allure-results)" ]; then
            echo "Generating Allure report for cloud-native-app..."
            allure generate reports/allure-results --clean -o reports/allure-report
            echo "Allure report generated successfully"
          else
            echo "No Allure results found for cloud-native-app"
          fi

      - name: Upload Allure Report - Automation Framework
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'automation-framework' || github.event_name == 'workflow_run' || github.event_name == 'push')
        uses: actions/upload-artifact@v4
        with:
          name: automation-framework-allure-report
          path: automation-framework/reports/allure-report/
          retention-days: 30

      - name: Upload Allure Report - AI Test Generation
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'ai-test-generation' || github.event_name == 'workflow_run' || github.event_name == 'push')
        uses: actions/upload-artifact@v4
        with:
          name: ai-test-generation-allure-report
          path: ai-test-generation/reports/allure-report/
          retention-days: 30

      - name: Upload Allure Report - Cloud Native App
        if: (github.event.inputs.module == 'all' || github.event.inputs.module == 'cloud-native-app' || github.event_name == 'workflow_run' || github.event_name == 'push')
        uses: actions/upload-artifact@v4
        with:
          name: cloud-native-app-allure-report
          path: cloud-native-app/reports/allure-report/
          retention-days: 30

      - name: Prepare GitHub Pages Deployment
        if: github.ref == 'refs/heads/main'
        run: |
          # Create a single deployment directory
          mkdir -p gh-pages-deploy
          
          # Copy reports to deployment directory
          if [ -d "automation-framework/reports/allure-report" ] && [ "$(ls -A automation-framework/reports/allure-report)" ]; then
            echo "Copying automation-framework report..."
            cp -r automation-framework/reports/allure-report gh-pages-deploy/automation-framework
          else
            echo "Creating placeholder for automation-framework..."
            mkdir -p gh-pages-deploy/automation-framework
            echo "<!DOCTYPE html><html><head><title>Allure Reports - Automation Framework</title></head><body><h1>Allure Test Reports - Automation Framework</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/automation-framework/index.html
          fi
          
          if [ -d "ai-test-generation/reports/allure-report" ] && [ "$(ls -A ai-test-generation/reports/allure-report)" ]; then
            echo "Copying ai-test-generation report..."
            cp -r ai-test-generation/reports/allure-report gh-pages-deploy/ai-test-generation
          else
            echo "Creating placeholder for ai-test-generation..."
            mkdir -p gh-pages-deploy/ai-test-generation
            echo "<!DOCTYPE html><html><head><title>Allure Reports - AI Test Generation</title></head><body><h1>Allure Test Reports - AI Test Generation</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/ai-test-generation/index.html
          fi
          
          if [ -d "cloud-native-app/reports/allure-report" ] && [ "$(ls -A cloud-native-app/reports/allure-report)" ]; then
            echo "Copying cloud-native-app report..."
            cp -r cloud-native-app/reports/allure-report gh-pages-deploy/cloud-native-app
          else
            echo "Creating placeholder for cloud-native-app..."
            mkdir -p gh-pages-deploy/cloud-native-app
            echo "<!DOCTYPE html><html><head><title>Allure Reports - Cloud Native App</title></head><body><h1>Allure Test Reports - Cloud Native App</h1><p>Reports will be available after test execution.</p></body></html>" > gh-pages-deploy/cloud-native-app/index.html
          fi
          
          # Create main index page
          cat > gh-pages-deploy/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Allure Test Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .module { margin: 20px 0; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }
                  .module h2 { color: #333; }
                  .module a { color: #007bff; text-decoration: none; }
                  .module a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Allure Test Reports</h1>
                  <p>Interactive test reports generated from CI/CD pipeline test results.</p>
                  
                  <div class="module">
                      <h2>Automation Framework</h2>
                      <p>Test automation framework with Page Object pattern, GraphQL/REST API testing, and Pact contract testing.</p>
                      <a href="automation-framework/">View Report</a>
                  </div>
                  
                  <div class="module">
                      <h2>AI Test Generation</h2>
                      <p>AI-powered test generation using LLMs for automated test case creation.</p>
                      <a href="ai-test-generation/">View Report</a>
                  </div>
                  
                  <div class="module">
                      <h2>Cloud Native App</h2>
                      <p>AWS serverless demo with Lambda, API Gateway, DynamoDB, and Infrastructure as Code.</p>
                      <a href="cloud-native-app/">View Report</a>
                  </div>
                  
                  <hr>
                  <p><small>Reports are automatically updated on every successful build of the main branch.</small></p>
              </div>
          </body>
          </html>
          EOF

      - name: Prepare Deployment Directory
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Preparing deployment directory..."
          ls -la gh-pages-deploy/
          echo "Directory structure:"
          find gh-pages-deploy/ -type f | head -20

      - name: Configure Git
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global init.defaultBranch main
          git config --global pull.rebase false
          echo "Git configuration:"
          git config --list | grep -E "(user\.|init\.|pull\.)"

      - name: Check Git Status
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Current git status:"
          git status
          echo "Current branch:"
          git branch -a

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages-deploy
          destination_dir: allure-reports
          keep_files: true
          allow_empty_commit: true
          force_orphan: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          full_commit_message: 'Deploy Allure Reports - ${{ github.sha }}'

