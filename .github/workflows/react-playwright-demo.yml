name: React Playwright Demo

on:
  push:
    branches: [ main ]
    paths:
      - 'react-playwright-demo/**'
  pull_request:
    paths:
      - 'react-playwright-demo/**'
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.19.0'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install dependencies
      working-directory: ./react-playwright-demo
      run: yarn install --frozen-lockfile
      
    - name: Install Playwright browsers
      working-directory: ./react-playwright-demo
      run: yarn playwright install --with-deps
      
    - name: Type check
      working-directory: ./react-playwright-demo
      run: yarn type-check
      
    - name: Lint code
      working-directory: ./react-playwright-demo
      run: yarn lint
      
    - name: Build application
      working-directory: ./react-playwright-demo
      run: yarn build
      
    - name: Run unit tests
      working-directory: ./react-playwright-demo
      run: yarn test:coverage
      
    - name: Run Playwright tests
      working-directory: ./react-playwright-demo
      run: yarn test:e2e
      
    - name: Generate Allure report
      working-directory: ./react-playwright-demo
      run: yarn test:allure:generate
      
    - name: Upload Playwright HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-playwright-report
        path: react-playwright-demo/playwright-report/
        retention-days: 30
        
    - name: Upload Allure report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-allure-report
        path: react-playwright-demo/allure-report/
        retention-days: 30
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-coverage-report
        path: react-playwright-demo/coverage/
        retention-days: 30
      
    - name: Comment PR with build status
      uses: actions/github-script@v7
      if: always() && github.event_name == 'pull_request'
      with:
        script: |
          const status = '${{ job.status }}' === 'success' ? '‚úÖ' : '‚ùå';
          const commentBody = `## ${status} **React Playwright Demo Build Status**
          
          **Status:** ${status === '‚úÖ' ? 'Build successful' : 'Build failed'}
          
          ### üìã **What's Changed**
          - React Playwright Demo application updated
          - Modern registration/sign-up interface
          - Ready for Playwright testing
          
          ### üß™ **Testing**
          The application includes comprehensive test selectors for Playwright:
          - Form inputs: \`data-testid\` attributes
          - Buttons: \`data-testid\` attributes  
          - Error messages: \`data-testid\` attributes
          
          ### üîó **Quick Links**
          - [Source Code](https://github.com/${context.repo.owner}/${context.repo.repo}/tree/main/react-playwright-demo)
          - [Playwright Test Examples](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/react-playwright-demo/README.md#playwright-testing)
          
          ---
          *This build status is automatically generated for PR #${context.issue.number}*`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: commentBody
          });
