name: React Playwright Demo

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.19.0'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install Cursor CLI
      run: |
        curl https://cursor.com/install -fsS | bash
        echo "$HOME/.cursor/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Install Playwright browsers
      run: yarn playwright install --with-deps
      
    - name: Type check
      run: yarn type-check
      
    - name: Lint code
      run: yarn lint
      
    - name: Build application
      run: yarn build
      
    - name: Run unit tests
      run: yarn test:coverage || true
      
    - name: Run Playwright tests
      run: yarn test:e2e || true
      
    - name: Fix Test Failures with Cursor
      if: failure()
      env:
        CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
      run: |
        echo "üîß Cursor CLI: Analyzing and fixing test failures..."
        cursor-agent -p "IMPORTANT: Do NOT create branches, commit, push, or post PR comments. 
        Only modify files in the working directory. 
        Analyze the test failures in this CI run and fix the TypeScript/React test files. 
        Focus on fixing TypeScript errors, test logic problems, and Playwright test issues. 
        Ensure all tests can be collected and executed successfully."
        
    - name: Re-run Tests After Cursor Fixes
      run: |
        echo "üîÑ Re-running tests after Cursor fixes..."
        yarn test:coverage || true
        yarn test:e2e || true
      
    - name: Generate Allure report
      run: |
        yarn test:e2e || true
        yarn test:allure:generate || true
      
    - name: Upload Playwright HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload Allure results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-allure-results
        path: allure-results/
        retention-days: 30
        
    - name: Upload Allure report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-allure-report
        path: allure-report/
        retention-days: 30
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: react-playwright-demo-coverage-report
        path: coverage/
        retention-days: 30
      
    - name: Comment PR with build status
      uses: actions/github-script@v7
      if: always() && github.event_name == 'pull_request'
      with:
        script: |
          const status = '${{ job.status }}' === 'success' ? '‚úÖ' : '‚ùå';
          const commentBody = `## ${status} **React Playwright Demo Build Status**
          
          **Status:** ${status === '‚úÖ' ? 'Build successful' : 'Build failed'}
          
          ### üìã **What's Changed**
          - React Playwright Demo application updated
          - Modern registration/sign-up interface
          - Ready for Playwright testing
          
          ### üß™ **Testing**
          The application includes comprehensive test selectors for Playwright:
          - Form inputs: \`data-testid\` attributes
          - Buttons: \`data-testid\` attributes  
          - Error messages: \`data-testid\` attributes
          
          ### üîó **Quick Links**
          - [Source Code](https://github.com/${context.repo.owner}/${context.repo.repo}/tree/main/react-playwright-demo)
          - [Playwright Test Examples](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/main/react-playwright-demo/README.md#playwright-testing)
          
          ---
          *This build status is automatically generated for PR #${context.issue.number}*`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: commentBody
          });
