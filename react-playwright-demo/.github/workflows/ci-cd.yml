name: React Playwright Demo CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'react-playwright-demo/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'react-playwright-demo/**'
  workflow_dispatch:
    inputs:
      module:
        description: 'Module to test'
        required: true
        default: 'react-playwright-demo'
        type: choice
        options:
          - 'react-playwright-demo'

env:
  NODE_VERSION: '20'
  WORKING_DIRECTORY: './react-playwright-demo'

jobs:
  # Lint and Type Check
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: './react-playwright-demo/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Run TypeScript type check
        run: yarn type-check

  # Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: './react-playwright-demo/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit tests
        run: yarn test

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./react-playwright-demo/coverage/lcov.info
          flags: unittests
          name: react-playwright-demo-unittests

  # Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: './react-playwright-demo/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run integration tests
        run: yarn test:integration

  # E2E Tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: './react-playwright-demo/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Playwright browsers
        run: yarn playwright install --with-deps

      - name: Build application
        run: yarn build

      - name: Start application
        run: |
          yarn preview --port 4173 &
          sleep 10
        env:
          PORT: 4173

      - name: Run Playwright tests
        run: |
          BASE_URL=http://localhost:4173 yarn playwright test
        env:
          BASE_URL: http://localhost:4173

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./react-playwright-demo/playwright-report/
          retention-days: 7

  # Build and Package
  build-and-package:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests, integration-tests, e2e-tests]
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: './react-playwright-demo/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: react-playwright-demo-build
          path: ./react-playwright-demo/dist/

  # Deploy to GitHub Pages (Main branch only)
  deploy-to-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-and-package]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: github-pages
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-playwright-demo-build
          path: ./dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # PR Preview Deployment
  deploy-pr-preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    needs: [build-and-package]
    if: github.event_name == 'pull_request'
    environment: pr-preview
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: react-playwright-demo-build
          path: ./dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = `https://dholman7.github.io/danholman-portfolio/react-playwright-demo/`;
            const comment = `## ðŸš€ PR Preview Deployed!
            
            Your changes have been deployed to GitHub Pages for preview:
            
            **Preview URL:** ${previewUrl}
            
            This preview will be available until the PR is closed or merged.
            
            ---
            *Deployed from commit: \`${context.sha}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Generate Allure Report
  generate-allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: './react-playwright-demo/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Allure
        run: yarn global add allure-commandline

      - name: Generate Allure report
        run: yarn test:allure:generate

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-react-playwright-demo
          path: ./react-playwright-demo/allure-report/
          retention-days: 7

  # Deploy Allure Report
  deploy-allure-report:
    name: Deploy Allure Report
    runs-on: ubuntu-latest
    needs: [generate-allure-report]
    if: always()
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-react-playwright-demo
          path: ./allure-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: react-playwright-demo

  # Cleanup
  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [deploy-to-pages, deploy-pr-preview, deploy-allure-report]
    if: always()
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Clean up build artifacts
        run: |
          rm -rf dist/
          rm -rf allure-results/
          rm -rf allure-report/
          rm -rf playwright-report/
          rm -rf coverage/

      - name: Clean up node_modules
        run: rm -rf node_modules/
